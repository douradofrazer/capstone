// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const SquareVerifier = artifacts.require('Verifier');

let VerifierContract;


contract('Verifier', async(accounts) => {
    const owner = accounts[0];
    // - use the contents from proof.json generated from zokrates steps
    const proof = require('./proof.json');

    describe('zokrates verification', function () {

        beforeEach(async () => {
            VerifierContract = await SquareVerifier.new({from: owner});
        });

        // Test verification with correct proof
        it('verification when proof is correct', async () => {
            let result = await VerifierContract.verifyTx.call(proof.proof, proof.inputs);
            assert.equal(result, true, "Proof is incorrect.");
        });

        // Test verification with incorrect proof
        it('Tverification when proof is incorrect', async () => {
            let result = await VerifierContract.verifyTx.call(proof.proof, [0, 0]);
            assert.equal(result, false, "Proof should not be correct.");
        });
    });
            
});